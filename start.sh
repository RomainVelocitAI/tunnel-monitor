#!/bin/bash

echo "üöÄ D√©marrage du syst√®me de monitoring de tunnels..."
echo ""

# Couleurs pour l'affichage
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# D√©marrer le backend
echo -e "${BLUE}üì¶ D√©marrage du backend sur le port 3001...${NC}"
cd /var/www/Analyseur_de_site/tunnel-monitor-backend
npm run dev &
BACKEND_PID=$!
echo -e "${GREEN}‚úÖ Backend d√©marr√© (PID: $BACKEND_PID)${NC}"
echo ""

# Attendre un peu avant de d√©marrer le frontend
sleep 3

# D√©marrer le frontend
echo -e "${BLUE}üé® D√©marrage du frontend sur le port 3000...${NC}"
cd /var/www/Analyseur_de_site/tunnel-monitor-frontend
npm run dev &
FRONTEND_PID=$!
echo -e "${GREEN}‚úÖ Frontend d√©marr√© (PID: $FRONTEND_PID)${NC}"
echo ""

echo "======================================"
echo -e "${GREEN}‚ú® Syst√®me d√©marr√© avec succ√®s !${NC}"
echo "======================================"
echo ""
echo "üìç URLs d'acc√®s :"
echo "   - Frontend (Dashboard) : http://localhost:3000"
echo "   - Backend (API)       : http://localhost:3001"
echo ""
echo "üìä Endpoints API disponibles :"
echo "   - GET  /api/tunnels"
echo "   - POST /api/tunnels/:id/test"
echo "   - GET  /api/dashboard/stats/:period"
echo "   - GET  /api/history"
echo ""
echo "‚ö†Ô∏è  Pour arr√™ter les serveurs, utilisez : ./stop.sh"
echo ""

# Garder le script en cours d'ex√©cution
wait